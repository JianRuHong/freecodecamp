/**
 * 箭头函数:ES6新增的函数定义方式 英文名Arrow Function, 因为其定义方法就是使用的箭头:x => x * x
 */

'use strict';

var arroF = x => x * 2; //箭头函数
//等价于
function f1(x) {
  return x * 2;
}
console.log(arroF(123));
console.log(f1(123));

//当参数不止一个, 函数体部分不止一条语句的时候就需要使用下面的格式, 参数使用()小括号括起来, 函数体用{}大括号括起来
var arroF2 = (x, y) => {
  x += 2;
  y += 10;
  console.log(x + y);
};
arroF2(1, 3);

//在之前提到过, 调用函数时, 其内部的this是动态的, 需要看是被谁调用, 但是在箭头函数里是固定的, 总是指向其定义的对象, 跟谁使用无关

/**
 * 总结: 箭头函数可以简化函数定义, 并且其内部的this变量总是指向其定义的对象, 而普通的函数, 其内部的this是动态的, 总是指向其真实的调用对象
 */
